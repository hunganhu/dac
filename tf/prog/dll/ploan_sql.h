//---------------------------------------------------------------------------

#ifndef ploan_sql_H
#define ploan_sql_H

#define CONNECTION_STRING  "FILE NAME=./AdoConnect.udl"
#define DEBUG  if (Debug) fprintf
//---------------------------------------------------------------------------
//char * CurrDateTime ();

enum SQLCodes { Get_AppInfo_Record,
		Get_AppI_Record,
		Get_Filter_Result,
		Write_PreFilter_Result,
		Create_Working_Tables,
		
		Drop_Procedure_Prepare_Jcic_Data,
                Exec_Procedure_Prepare_Jcic_Data,
                Create_Procedure_Prepare_Jcic_Data,

		Insert_Daco_Table,
		Insert_Audit_Table,
		Insert_Intermediate_Table,
		
 		Drop_Procedure_Generate_Daco32_Score,
 		Exec_Procedure_Generate_Daco32_Score,
 		Create_Procedure_Generate_Daco32_Score,

		Drop_Procedure_Generate_Ploan_Score,
		Exec_Procedure_Generate_Ploan_Score,
		Create_Procedure_Generate_Ploan_Score,
		Drop_All_Tables
		};

char *SQLNames[]= {
		"Get_AppInfo_Record",
		"Get_AppI_Record",
		"Get_Filter_Result",
		"Write_PreFilter_Result",
		"Create_Working_Tables",

		"Drop_Procedure_Prepare_Jcic_Data",
                "Exec_Procedure_Prepare_Jcic_Data",
                "Create_Procedure_Prepare_Jcic_Data",

		"Insert_Daco_Table",
		"Insert_Audit_Table",
		"Insert_Intermediate_Table",
 		"Drop_Procedure_Generate_Daco32_Score",
 		"Exec_Procedure_Generate_Daco32_Score",
 		"Create_Procedure_Generate_Daco32_Score",

		"Drop_Procedure_Generate_Ploan_Score",
		"Exec_Procedure_Generate_Ploan_Score",
		"Create_Procedure_Generate_Ploan_Score",
		"Drop_All_Tables"
		};

char *SQLCommands[] = {
/* Get_AppInfo_Record */
" select case_sn, idn, dac_sn, application_date, inquiry_date, product_code, project_source, case_source, recommender,"
"  guarantor, principal, repayment, periods, grace_period, num_int_period, appropriation, zip, segment,"
"  application_fee, risk_mgmt_fee, acct_mgmt_fee, bt_fee"
" from app_info"
" where case_sn = :v0 and idn = :v1 and dac_sn = :v2;",

/* Get_AppI_Record */
" select case_sn, idn, dac_sn, seq, apr, periods"
"  from app_i"
" where case_sn = :v0 and idn = :v1 and dac_sn = :v2 order by seq;",

/*Get_Filter_Result*/
" select idn, avail_flag, jas002_defect, krm021_hit, krm023_hit, max_bucket, fs044, cash_max_bucket, cash_utilization"
"  from #base"
" where idn = :v1",

/*Write_PreFilter_Result*/
" insert into ploan_result(case_sn, idn, dac_sn, application_date, return_msg, checksum1)"
"  values (:v0, :v1, :v2, :v3, :v4, :v5);",

/* jcic data preparation for a idn */
/* Create_Working_Tables */
" create table #bam085_dedup ("
" 	case_sn char(12),"
" 	idn char (11),"
" 	dac_sn decimal(3,0),"
" 	data_yyy char (3),"
" 	data_mm char (2),"
" 	bank_code char (7),"
" 	bank_name char (40),"
" 	account_code char (1),"
" 	account_code2 char (1),"
" 	purpose_code char (1),"
" 	contract_amt decimal (10),"
" 	loan_amt decimal (10),"
" 	pass_due_amt decimal (10),"
" 	pay_code_12 char (12),"
" 	co_loan char (1),"
" 	bank_code2 char (3),"
" 	cnt int"
" );"
" create table #krm021_dedup ("
" 	case_sn char(12),"
" 	idn char (11),"
" 	dac_sn decimal(3,0),"
" 	card_brand char (1),"
" 	card_type char (1),"
" 	issue char (3),"
" 	issue_name char (40),"
" 	start_date char (7),"
" 	stop_date char (7),"
" 	stop_code char (1),"
" 	ab_code char (1),"
" 	m_s char (1),"
" 	limit char (6),"
" 	start_mon_since int,"
" 	end_mon_since int,"
" 	cnt int"
" );"
" create table #krm023_dedup ("
" 	case_sn char(12),"
" 	idn char (11),"
" 	dac_sn decimal(3,0),"
" 	issue char (3),"
" 	issue_name char (40),"
" 	limit char (6),"
" 	yrmon char (5),"
" 	kr_code char (7),"
" 	payment char (3),"
" 	cash char (1),"
" 	pay_code char (1),"
" 	mon_since int,"
" 	payment_amt float,"
" 	bucket_def_1k int default 0,"
" 	bucket_ef_1k int default 0,"
" 	bucket_f_1k int default 0,"
" 	cnt int"
" );"
" create table #stm001_dedup ("
" 	case_sn char(12),"
" 	idn char (11),"
" 	dac_sn decimal(3,0),"
" 	bank_code char (7),"
" 	bank_name char (40),"
" 	query_date char (7),"
" 	item_list char (10),"
" 	query_mon_since int,"
" 	cnt int"
" );"
" create table #jas002_t ("
" 	case_sn char(12),"
" 	idn char (11),"
" 	dac_sn decimal(3,0),"
" 	reason char (1),"
" 	date_happen char (7),"
" 	mon_since int"
" );"
" create table #jas002_t_dedup ("
" 	case_sn char(12),"
" 	idn char (11),"
" 	dac_sn decimal(3,0),"
" 	reason char (1),"
" 	date_happen char (7),"
" 	mon_since int,"
" 	cnt int"
" );"
" create table #base ("
"  	idn char (11),"
" 	avail_flag int,"
" 	jas002_defect int default 0,"
" 	krm021_hit int default 0,"
" 	krm023_hit int default 0,"
" 	max_bucket int default 0,"
" 	fs044 int default 0,"
" 	cash_max_bucket int default 0,"
" 	cash_utilization int default 0"
" );"
"  create table #daco_v32_cal ("
"   case_sn char(12),"
"   idn char (11),"
"   dac_sn decimal(3,0),"
"   fs002_1k_9m decimal (14, 5),"
"   fs008_12mplus decimal (14, 5),"
"   fs016_9m decimal (14, 5),"
"   fs040 decimal (14, 5),"
"   fs062_1k_3m decimal (14, 5),"
"   fs101_9m decimal (14, 5),"
"   fs105_6m decimal (14, 5),"
"   ms106_3m decimal (14, 5),"
"   ms106_9m decimal (14, 5),"
"   ms106_12m decimal (14, 5),"
"   ms001_1k_12m decimal (14, 5),"
"   ms006_1k_3m decimal (14, 5),"
"   ms006_1k_6m decimal (14, 5),"
"   ms009_3m decimal (14, 5),"
"   ms009_6m decimal (14, 5),"
"   ms011_12m decimal (14, 5),"
"   ms011_3m decimal (14, 5),"
"   ms011_6m decimal (14, 5),"
"   ms011_9m decimal (14, 5),"
"   ms015_3m decimal (14, 5),"
"   ms110_12m decimal (14, 5),"
"   ms110_3m decimal (14, 5),"
"   ms110_9m decimal (14, 5),"
"   ms203_1k_3m decimal (14, 5),"
"   ms203_1k_6m decimal (14, 5),"
"   ms203_1k_9m decimal (14, 5),"
"   ms205_1k_3m decimal (14, 5),"
"   ms205_1k_6m decimal (14, 5),"
"   mt006_1k_43 decimal (14, 5),"
"   mt009_43 decimal (14, 5),"
"   mt011_31 decimal (14, 5),"
"   mt110_41 decimal (14, 5),"
"   mt203_1k_42 decimal (14, 5),"
"   mt205_1k_43 decimal (14, 5),"
"   fs002_1k_9m_q decimal (14, 5),"
"   fs008_12mplus_r decimal (14, 5),"
"   fs105_6m_q decimal (14, 5),"
"   ms001_1k_12m_r decimal (14, 5),"
"   ms006_1k_6m_r decimal (14, 5),"
"   ms015_3m_q decimal (14, 5),"
"   mt006_1k_43_r decimal (14, 5),"
"   mt006_1k_43_r_tran decimal (14, 5),"
"   int015 decimal (14, 5),"
"   mt009_43_q decimal (14, 5),"
"   mt110_41_r decimal (14, 5),"
"   mt203_1k_42_r decimal (14, 5),"
"   mt205_1k_43_r decimal (14, 5),"
"   fs002_1k_9m_q_tran decimal (14, 5),"
"   fs008_12mplus_r_tran decimal (14, 5),"
"   fs040_tran decimal (14, 5),"
"   fs062_1k_3m_z decimal (14, 5),"
"   fs101_9m_z decimal (14, 5),"
"   int015_tran decimal (14, 5),"
"   fs105_6m_q_t decimal (14, 5),"
"   ms001_1k_12m_r_t2 decimal (14, 5),"
"   ms006_1k_6m_r_tran decimal (14, 5),"
"   ms015_3m_q_t2 decimal (14, 5),"
"   mt009_43_q_t decimal (14, 5),"
"   mt011_31_z decimal (14, 5),"
"   mt110_41_r_t decimal (14, 5),"
"   mt203_1k_42_r_t decimal (14, 5),"
"   mt205_1k_43_r_tran decimal (14, 5),"
"   daco_score decimal (16, 8),"
"      fs025_12m decimal (14, 5),"
"      fs025_12m_z decimal (14, 5),"
"      fs029 decimal (14, 5),"
"      fs029_t decimal (14, 5),"
"      fs029_t2 decimal (14, 5),"
"      fs203_3m_1k decimal (14, 5),"
"      fs203_6m_1k decimal (14, 5),"
"      ft203_43_1k decimal (14, 5),"
"      ft203_43_1k_r decimal (14, 5),"
"      ft203_43_1k_r_t decimal (14, 5),"
"      ft203_43_1k_r_t3 decimal (14, 5),"
"      ms119_12m decimal (14, 5),"
"      fs051 decimal (14, 5),"
"      fs051_t2 decimal (14, 5),"
"      ms024_3m decimal (14, 5),"
"      ms024_6m decimal (14, 5),"
"      ms024_9m decimal (14, 5),"
"      mt024_32 decimal (14, 5),"
"      mt024_32_r decimal (14, 5),"
"      mt024_32_r_t decimal (14, 5),"
"      sex int,"
"      sex_t int,"
"      guarantor char(1),"
"      segment  varchar(7),"
"      apr_group int,"
"      rscore decimal (16, 8),"
"      twentile int,"
"      pd decimal (16, 8)"
"   );",

/* Drop_Procedure_Prepare_Jcic_Data */
" if exists (select * from dbo.sysobjects where id = object_id(N'[prepare_jcic_data]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)"
" drop procedure prepare_jcic_data;",

/* Exec_Procedure_Prepare_Jcic_Data */
"Execute prepare_jcic_data :v0, :v1, :v2, :v3;",


/* Create_Procedure_Prepare_Jcic_Data */
" CREATE PROCEDURE prepare_jcic_data"
"  (@case_sn char(12),"
"   @idn char(11),"
"   @dac_sn int,"
"   @now int)"
"  AS"
" insert into #krm021_dedup (case_sn, idn, dac_sn, card_brand, card_type, issue, issue_name, start_date, stop_date, stop_code, ab_code, m_s, limit, cnt)"
"  select case_sn, idn, dac_sn, card_brand, card_type, issue, issue_name, start_date, stop_date, stop_code, ab_code, m_s, limit, count(*)"
"  from krm021"
"  where case_sn = @case_sn and idn = @idn and dac_sn = @dac_sn"
"  group by case_sn, idn, dac_sn, card_brand, card_type, issue, issue_name, start_date, stop_date, stop_code, ab_code, m_s, limit;"
" "
" insert into #krm023_dedup (case_sn, idn, dac_sn, issue, issue_name, limit, yrmon, kr_code, payment, cash, pay_code, cnt)"
"  select case_sn, idn, dac_sn, issue, issue_name, limit, yrmon, kr_code, payment, cash, pay_code, count(*)"
"  from krm023"
"  where case_sn = @case_sn and idn = @idn and dac_sn = @dac_sn"
"  group by case_sn, idn, dac_sn, issue, issue_name, limit, yrmon, kr_code, payment, cash, pay_code;"
" "
" insert into #stm001_dedup (case_sn, idn, dac_sn, bank_code, bank_name, query_date, item_list, cnt)"
"  select case_sn, idn, dac_sn, bank_code, bank_name, query_date, item_list, count(*)"
"  from stm001"
"  where case_sn = @case_sn and idn = @idn and dac_sn = @dac_sn"
"  group by case_sn, idn, dac_sn, bank_code, bank_name, query_date, item_list;"
" "
" insert into #bam085_dedup (case_sn, idn, dac_sn, data_yyy, data_mm, bank_code, bank_name, account_code, account_code2, purpose_code, contract_amt, loan_amt, pass_due_amt, pay_code_12, co_loan, cnt)"
"  select case_sn, idn, dac_sn, data_yyy, data_mm, bank_code, bank_name, account_code, account_code2, purpose_code, contract_amt, loan_amt, pass_due_amt, pay_code_12, co_loan, count(*)"
"  from bam085"
"  where case_sn = @case_sn and idn = @idn and dac_sn = @dac_sn"
"  group by case_sn, idn, dac_sn, data_yyy, data_mm, bank_code, bank_name, account_code, account_code2, purpose_code, contract_amt, loan_amt, pass_due_amt, pay_code_12, co_loan;"
" insert into #jas002_t (case_sn, idn, dac_sn, reason, date_happen)"
"  select case_sn, idn, dac_sn, 'D', data_yyymmdd"
"  from bas001"
"  where data_yyymmdd is not null"
"    and case_sn = @case_sn and idn = @idn and dac_sn = @dac_sn;"
" insert into #jas002_t (case_sn, idn, dac_sn, reason, date_happen)"
"  select case_sn, idn, dac_sn, 'B', ck_date"
"  from dam103"
"  where ck_date is not null"
"    and case_sn = @case_sn and idn = @idn and dac_sn = @dac_sn;"
" insert into #jas002_t (case_sn, idn, dac_sn, reason, date_happen)"
"  select case_sn, idn, dac_sn, 'R', beg_date"
"  from dam203"
"  where beg_date is not null"
"    and case_sn = @case_sn and idn = @idn and dac_sn = @dac_sn;"
" insert into #jas002_t (case_sn, idn, dac_sn, reason, date_happen)"
"  select case_sn, idn, dac_sn, 'S', stop_date"
"  from krm021"
"  where stop_code = '3'"
"    and case_sn = @case_sn and idn = @idn and dac_sn = @dac_sn;"
""
" insert into #jas002_t_dedup (case_sn, idn, dac_sn, reason, date_happen, mon_since, cnt)"
"  select case_sn, idn, dac_sn, reason, date_happen, mon_since, count(*)"
"  from #jas002_t"
"  group by case_sn, idn, dac_sn, reason, date_happen, mon_since;"
" update #krm021_dedup"
"  set start_date = (case"
" 		   when left(start_date,1) not in ('1', '0', '*') then '0' + (start_date)"
" 		   else start_date"
" 		  end),"
"     stop_date =  (case"
" 		   when left(stop_date,1) not in ('1', '0', '*') then '0' + (stop_date)"
"  		   else stop_date"
" 		  end);"
" update #krm021_dedup"
" set start_mon_since = (case"
" 			when left(start_date,1) = '*' then null"
" 			else left(start_date, 3) * 12 + right(left(start_date, 5), 2)"
" 		       end),"
"     end_mon_since = (case"
" 			when left(stop_date, 1) = '*' then null"
" 			else left(stop_date, 3) * 12 + right(left(stop_date, 5), 2)"
" 		     end);"
" update #krm021_dedup"
" set end_mon_since = 12000   /*999 * 12 + 12*/"
" where end_mon_since is null;"
" update #jas002_t_dedup"
" set date_happen = (case"
" 		    when left(ltrim(date_happen),1) not in ('1', '0', '*') then '0' + (ltrim(date_happen))"
"  		    else date_happen"
"  		   end);"
" update #jas002_t_dedup"
" set mon_since = (case"
"    		  when left(ltrim(date_happen),1) = '*' then null"
"    		  else left(ltrim(date_happen), 3) * 12 + right(left(rtrim(date_happen), 5), 2)"
"  		 end);"
" update #krm023_dedup"
" set yrmon = (case"
" 	      when left(yrmon,1) not in ('1', '0', '*') then '0' + (yrmon)"
" 	      else yrmon"
" 	     end);"
" update #krm023_dedup"
" set mon_since = (case"
" 		   when left(yrmon,1) = '*' then null"
" 		   else left(yrmon, 3) * 12 + right(left(yrmon, 5), 2)"
" 		 end);"
" update #stm001_dedup"
" set query_date = (case"
" 		   when left(query_date,1) not in ('1', '0', '*') then '0' + (query_date)"
" 		   else query_date"
" 		  end);"
" update #stm001_dedup"
" set query_mon_since = (case"
" 			when left(query_date,1) = '*' then null"
" 			else left(query_date, 3) * 12 + right(left(query_date, 5), 2)"
" 		       end);"
" update #krm023_dedup"
"  set payment ="
"   (case when right(left(payment,2),1) in ('h', 'm', 'l') then '0' + (left(payment,2))"
"         else payment end);"
" update #krm023_dedup"
"  set payment_amt ="
"   (case right(payment,1) when 'l' then 2 when 'm' then 5 when 'h' then 8"
"   else 0 end) * power(10, isnull(left(payment,2),0)-1) / 1000.0;"
" update  #krm023_dedup"
" set bucket_def_1k = (case when pay_code in ('D', 'E', 'F') and payment_amt > 1 then 1"
"                       else 0 end),"
"     bucket_ef_1k = (case when pay_code in ('E', 'F') and payment_amt > 1 then 1"
"                      else 0 end),"
"     bucket_f_1k = (case when pay_code = 'F' and payment_amt > 1 then 1"
"                     else 0 end);"
" declare @i int"
" set @i=12"
" while @i > 0"
" begin"
"   update #krm023_dedup"
"   set"
"   bucket_def_1k =(case when #krm023_dedup.pay_code in ('D', 'E', 'F') and"
"                             #krm023_dedup.payment_amt > 1"
"                        then a.bucket_def_1k + 1"
"                        else 0 end),"
"   bucket_ef_1k =(case when  #krm023_dedup.pay_code in ('E', 'F') and"
"                             #krm023_dedup.payment_amt > 1"
"                       then a.bucket_ef_1k + 1"
"                       else 0 end),"
"   bucket_f_1k =(case when  #krm023_dedup.pay_code = 'F' and"
"                            #krm023_dedup.payment_amt > 1"
"                      then a.bucket_f_1k + 1"
"                      else 0 end)"
"   from  #krm023_dedup as a inner join  #krm023_dedup on"
"         a.idn =  #krm023_dedup.idn and"
"         a.issue =  #krm023_dedup.issue and"
"         a.mon_since = ( #krm023_dedup.mon_since - 1)"
"   where (@now - a.mon_since) = @i"
" set @i = @i - 1"
" end;"
" update #bam085_dedup"
" set bank_code2 = left(bank_code,3);"
" /* risk filter process */"
" select distinct idn, 1 as avail_flag into #base_tmp"
"  from #krm021_dedup;"
" insert into #base_tmp"
"  select distinct idn, 2"
"  from #krm023_dedup;"
" insert into #base_tmp"
"  select distinct idn, 4"
"  from #bam085_dedup;"
" insert into #base_tmp"
"  select distinct idn, 8"
"  from #stm001_dedup;"
" insert into #base_tmp"
"  select distinct idn, 16"
"  from #jas002_t_dedup;"
" insert into #base (idn, avail_flag)"
"  select idn, sum(avail_flag)"
"  from #base_tmp"
"  group by idn;"
" /* Update filter variable*/"
" create table #tmp ("
"  idn char(11),"
"  mon int,"
"  v1 decimal (16, 8),"
"  v2 decimal (16, 8),"
"  v3 decimal (16, 8));"
" select idn, count(*) as cnt"
" into #major_defect"
" from #jas002_t_dedup"
" where @now - mon_since <= 36"
" group by idn;"
" update #base"
" set jas002_defect = 1"
" from #major_defect as a"
" where a.idn = #base.idn and"
"       a.cnt > 0;"
" update #base"
" set krm023_hit = 1"
" where avail_flag & 0x02 = 0x02;"
" update #base"
" set krm021_hit = 1"
" where avail_flag & 0x01 = 0x01;"
" insert into #tmp(idn, v1)"
"  select idn, max(bucket_ef_1k)"
"  from #krm023_dedup"
"  group by idn;"
" update #base"
" set max_bucket = v1"
" from #tmp as a"
" where a.idn = #base.idn"
" /*----FS044----*/"
" delete from #tmp;"
" insert into #tmp (idn, v1)"
"  select idn, count(*)"
"  from #bam085_dedup"
"  where pass_due_amt > 0"
"  group by idn;"
" update #base"
" set fs044 = v1"
" from #tmp as a"
" where a.idn = #base.idn;"
" /*----cash card max bucket----*/"
" delete from #tmp;"
" insert into #tmp (idn, v1)"
"  select idn, count(*)"
"  from #bam085_dedup"
"  where account_code = 'Y'"
"    and ISNULL(left(pay_code_12, 1),'0') not in ('0', 'X')"
"  group by idn;"
" update #base"
" set cash_max_bucket = v1"
" from #tmp as a"
" where a.idn = #base.idn;"
" /*----cash card utilization----*/"
" delete from #tmp;"
" insert into #tmp (idn, v1)"
"  select idn, count(*)"
"  from #bam085_dedup"
"  where account_code = 'Y'"
"    and ISNULL(loan_amt,0) / contract_amt > 1"
"    and contract_amt > 0"
"  group by idn;"
" update #base"
" set cash_utilization = v1"
" from #tmp as a"
" where a.idn = #base.idn;"
"/* -- end of procedure prepare_jcic_data --*/",

/* Insert_Daco_Table */
"insert into #daco_v32_cal(case_sn, idn, dac_sn) values (:v0, :v1, :v2);",

/* Insert_Audit_Table */
"if NOT exists (select * from dbo.sysobjects where id = object_id(N'dac_audit')"
"   and objectproperty(id, N'isusertable') = 1)"
"  begin"
"  create table dac_audit ("
"   case_sn char(12),"
"   idn char (11),"
"   dac_sn decimal(3,0),"
"   fs002_1k_9m decimal (14, 5),"
"   fs008_12mplus decimal (14, 5),"
"   fs016_9m decimal (14, 5),"
"   fs040 decimal (14, 5),"
"   fs062_1k_3m decimal (14, 5),"
"   fs101_9m decimal (14, 5),"
"   fs105_6m decimal (14, 5),"
"   ms106_3m decimal (14, 5),"
"   ms106_9m decimal (14, 5),"
"   ms106_12m decimal (14, 5),"
"   ms001_1k_12m decimal (14, 5),"
"   ms006_1k_3m decimal (14, 5),"
"   ms006_1k_6m decimal (14, 5),"
"   ms009_3m decimal (14, 5),"
"   ms009_6m decimal (14, 5),"
"   ms011_12m decimal (14, 5),"
"   ms011_3m decimal (14, 5),"
"   ms011_6m decimal (14, 5),"
"   ms011_9m decimal (14, 5),"
"   ms015_3m decimal (14, 5),"
"   ms110_12m decimal (14, 5),"
"   ms110_3m decimal (14, 5),"
"   ms110_9m decimal (14, 5),"
"   ms203_1k_3m decimal (14, 5),"
"   ms203_1k_6m decimal (14, 5),"
"   ms203_1k_9m decimal (14, 5),"
"   ms205_1k_3m decimal (14, 5),"
"   ms205_1k_6m decimal (14, 5),"
"   mt006_1k_43 decimal (14, 5),"
"   mt009_43 decimal (14, 5),"
"   mt011_31 decimal (14, 5),"
"   mt110_41 decimal (14, 5),"
"   mt203_1k_42 decimal (14, 5),"
"   mt205_1k_43 decimal (14, 5),"
"   fs002_1k_9m_q decimal (14, 5),"
"   fs008_12mplus_r decimal (14, 5),"
"   fs105_6m_q decimal (14, 5),"
"   ms001_1k_12m_r decimal (14, 5),"
"   ms006_1k_6m_r decimal (14, 5),"
"   ms015_3m_q decimal (14, 5),"
"   mt006_1k_43_r decimal (14, 5),"
"   mt006_1k_43_r_tran decimal (14, 5),"
"   int015 decimal (14, 5),"
"   mt009_43_q decimal (14, 5),"
"   mt110_41_r decimal (14, 5),"
"   mt203_1k_42_r decimal (14, 5),"
"   mt205_1k_43_r decimal (14, 5),"
"   fs002_1k_9m_q_tran decimal (14, 5),"
"   fs008_12mplus_r_tran decimal (14, 5),"
"   fs040_tran decimal (14, 5),"
"   fs062_1k_3m_z decimal (14, 5),"
"   fs101_9m_z decimal (14, 5),"
"   int015_tran decimal (14, 5),"
"   fs105_6m_q_t decimal (14, 5),"
"   ms001_1k_12m_r_t2 decimal (14, 5),"
"   ms006_1k_6m_r_tran decimal (14, 5),"
"   ms015_3m_q_t2 decimal (14, 5),"
"   mt009_43_q_t decimal (14, 5),"
"   mt011_31_z decimal (14, 5),"
"   mt110_41_r_t decimal (14, 5),"
"   mt203_1k_42_r_t decimal (14, 5),"
"   mt205_1k_43_r_tran decimal (14, 5),"
"   daco_score decimal (16, 8),"
"      fs025_12m decimal (14, 5),"
"      fs025_12m_z decimal (14, 5),"
"      fs029 decimal (14, 5),"
"      fs029_t decimal (14, 5),"
"      fs029_t2 decimal (14, 5),"
"      fs203_3m_1k decimal (14, 5),"
"      fs203_6m_1k decimal (14, 5),"
"      ft203_43_1k decimal (14, 5),"
"      ft203_43_1k_r decimal (14, 5),"
"      ft203_43_1k_r_t decimal (14, 5),"
"      ft203_43_1k_r_t3 decimal (14, 5),"
"      ms119_12m decimal (14, 5),"
"      fs051 decimal (14, 5),"
"      fs051_t2 decimal (14, 5),"
"      ms024_3m decimal (14, 5),"
"      ms024_6m decimal (14, 5),"
"      ms024_9m decimal (14, 5),"
"      mt024_32 decimal (14, 5),"
"      mt024_32_r decimal (14, 5),"
"      mt024_32_r_t decimal (14, 5),"
"      sex int,"
"      sex_t int,"
"      guarantor char(1),"
"      segment  varchar(7),"
"      apr_group int,"
"      rscore decimal (16, 8),"
"      twentile int,"
"      pd decimal (16, 8)"
"   );"
"  end"
" insert into dac_audit select * from #daco_v32_cal;",

/* Insert_Intermediate_Table */
"if NOT exists (select * from dbo.sysobjects where id = object_id(N'intermediate')"
"   and objectproperty(id, N'isusertable') = 1)"
"  begin"
"    create table intermediate ("
"     case_sn char(12),"
"     idn char (11),"
"     dac_sn decimal(3,0),"
"     fs002_1k_9m decimal (14, 5),"
"     fs008_12mplus decimal (14, 5),"
"     fs016_9m decimal (14, 5),"
"     fs040 decimal (14, 5),"
"     fs062_1k_3m decimal (14, 5),"
"     fs101_9m decimal (14, 5),"
"     fs105_6m decimal (14, 5),"
"     ms106_3m decimal (14, 5),"
"     ms106_9m decimal (14, 5),"
"     ms106_12m decimal (14, 5),"
"     ms001_1k_12m decimal (14, 5),"
"     ms006_1k_3m decimal (14, 5),"
"     ms006_1k_6m decimal (14, 5),"
"     ms009_3m decimal (14, 5),"
"     ms009_6m decimal (14, 5),"
"     ms011_12m decimal (14, 5),"
"     ms011_3m decimal (14, 5),"
"     ms011_6m decimal (14, 5),"
"     ms011_9m decimal (14, 5),"
"     ms015_3m decimal (14, 5),"
"     ms110_12m decimal (14, 5),"
"     ms110_3m decimal (14, 5),"
"     ms110_9m decimal (14, 5),"
"     ms203_1k_3m decimal (14, 5),"
"     ms203_1k_6m decimal (14, 5),"
"     ms203_1k_9m decimal (14, 5),"
"     ms205_1k_3m decimal (14, 5),"
"     ms205_1k_6m decimal (14, 5),"
"     int015 decimal (14, 5),"
"     fs025_12m decimal (14, 5),"
"     fs029 decimal (14, 5),"
"     fs203_3m_1k decimal (14, 5),"
"     fs203_6m_1k decimal (14, 5),"
"     ft203_43_1k decimal (14, 5),"
"     ms119_12m decimal (14, 5),"
"     fs051 decimal (14, 5),"
"     ms024_3m decimal (14, 5),"
"     ms024_6m decimal (14, 5),"
"     ms024_9m decimal (14, 5)"
"     );"
"  end"
" insert into intermediate(case_sn, idn, dac_sn, fs002_1k_9m, fs008_12mplus, fs016_9m, fs040, fs062_1k_3m, fs101_9m,"
"                         fs105_6m, ms106_3m, ms106_9m, ms106_12m, ms001_1k_12m, ms006_1k_3m, ms006_1k_6m, ms009_3m,"
"                         ms009_6m, ms011_12m, ms011_3m, ms011_6m, ms011_9m, ms015_3m, ms110_12m, ms110_3m, ms110_9m,"
"                         ms203_1k_3m, ms203_1k_6m, ms203_1k_9m, ms205_1k_3m, ms205_1k_6m, int015, fs025_12m, fs029,"
"                         fs203_3m_1k, fs203_6m_1k, ft203_43_1k, ms119_12m, fs051, ms024_3m, ms024_6m, ms024_9m)"
"  select case_sn, idn, dac_sn, fs002_1k_9m, fs008_12mplus, fs016_9m, fs040, fs062_1k_3m, fs101_9m,"
"        fs105_6m, ms106_3m, ms106_9m, ms106_12m, ms001_1k_12m, ms006_1k_3m, ms006_1k_6m, ms009_3m,"
"        ms009_6m, ms011_12m, ms011_3m, ms011_6m, ms011_9m, ms015_3m, ms110_12m, ms110_3m, ms110_9m,"
"        ms203_1k_3m, ms203_1k_6m, ms203_1k_9m, ms205_1k_3m, ms205_1k_6m, int015, fs025_12m, fs029,"
"        fs203_3m_1k, fs203_6m_1k, ft203_43_1k, ms119_12m, fs051, ms024_3m, ms024_6m, ms024_9m"
"  from #daco_v32_cal;"
"/* -- end of  Insert_Intermediate_Table --*/",

/* Drop_Procedure_Generate_Daco32_Score */
" if exists (select * from dbo.sysobjects where id = object_id(N'[generate_daco32_score]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)"
" drop procedure generate_daco32_score;",

/* Exec_Procedure_Generate_Daco32_Score */
" execute generate_daco32_score :v1;",

/* Create_Procedure_Generate_Daco32_Score */
" CREATE PROCEDURE generate_daco32_score"
"  (@now int)"
"  AS"
"  declare @i int"
"  declare @months int"
" /* create temportary intermediate tables */"
" create table #tmp ("
"   idn char(11),"
"   mon int,"
"   v1 decimal (16, 8),"
"   v2 decimal (16, 8),"
"   v3 decimal (16, 8));"
" create table #tmp1 ("
"   idn char(11),"
"   mon int,"
"   v1 decimal (16, 8));"
" create table #open_issuer ("
"   idn char(11),"
"   issuer char(3),"
"   mon int);"
" create table #lines ("
"  idn char(11),"
"  issuer char(3),"
"  mon int,"
"  line decimal (16, 8));"
" create table #open_card ("
"  idn char(11),"
"  issue char(3),"
"  mon int);"
" create table #open_line ("
"  idn char(11),"
"  issue char(3),"
"  mon int,"
"  cards int,"
"  bucket int);"
" create table #latest_stmt_mon ("
"  idn char(11),"
"  issue char(3),"
"  mon int);"
" create table #latest_line ("
"  idn char(11),"
"  issue char(3),"
"  mon int,"
"  mob int);"
" /*Initialize #daco_v32_cal table*/"
" /*Init BAM085 variables*/"
" update #daco_v32_cal"
" set fs040 = 0"
" from #bam085_dedup as a"
" where a.idn = #daco_v32_cal.idn;"
" /*Init krm021 variables*/"
" update #daco_v32_cal"
" set fs008_12mplus = 0"
" from #krm021_dedup as a"
" where a.idn = #daco_v32_cal.idn;"
" /*Init krm023 variables*/"
" update #daco_v32_cal"
" set fs002_1k_9m = 0,"
"     fs016_9m = 0,"
"     fs062_1k_3m = 0,"
"     fs101_9m = 0,"
"     fs105_6m = 0,"
"     ms001_1k_12m = 0,"
"     ms006_1k_3m = 0,"
"     ms006_1k_6m = 0,"
"     ms009_3m = 0,"
"     ms009_6m = 0,"
"     ms011_12m = 0,"
"     ms011_3m = 0,"
"     ms011_6m = 0,"
"     ms011_9m = 0,"
"     ms015_3m = 0,"
"     ms110_12m = 0,"
"     ms110_3m = 0,"
"     ms110_9m = 0,"
"     ms203_1k_3m = 0,"
"     ms203_1k_6m = 0,"
"     ms203_1k_9m = 0,"
"     ms106_3m = 0,"
"     ms106_9m = 0,"
"     ms106_12m = 0"
" from #krm023_dedup as a"
" where a.idn = #daco_v32_cal.idn;"
" /*Init krm021 and krm023 variables*/"
" update #daco_v32_cal"
" set ms205_1k_3m = 0,"
"     ms205_1k_6m = 0"
" from #krm021_dedup as a, #krm023_dedup as b"
" where a.idn = b.idn"
"   and a.idn = #daco_v32_cal.idn;"
" /* ---start making fs002--- */"
"   delete from #tmp1;"
"   delete from #tmp;"
"   insert into #tmp1 (idn, mon, v1)"
"    select idn, mon_since, 1"
"    from #krm023_dedup"
"    where bucket_ef_1k >= 1"
"    group by idn, mon_since;"
"   insert into #tmp (idn, mon, v1)"
"    select idn, 9, sum(v1)"
"    from #tmp1"
"    where (@now - mon) <= 9"
"      and (@now - mon) > 0"
"    group by idn;"
"   update #daco_v32_cal"
"    set fs002_1k_9m = v1"
"    from #tmp as a"
"    where a.idn = #daco_v32_cal.idn"
"      and mon=9;"
" /* ---start making fs016--- */"
"  delete from #tmp1;"
"  insert into #tmp1 (idn, mon, v1)"
"   select idn, 9, count(distinct issue)"
"   from #krm023_dedup"
"   where (@now - mon_since) <= 9"
"     and (@now - mon_since) > 0"
"     and cash = 'Y'"
"     group by idn;"
"  update #daco_v32_cal"
"   set fs016_9m = v1"
"   from #tmp1 as a"
"   where a.idn = #daco_v32_cal.idn"
"     and mon=9;"
" /* ---start making fs062--- */"
"  delete from #tmp1;"
"  insert into #tmp1 (idn, mon, v1)"
"   select idn, 3, count(distinct issue)"
"   from #krm023_dedup"
"   where bucket_ef_1k >= 2"
"     and (@now - mon_since) <= 3"
"     and (@now - mon_since) > 0"
"   group by idn;"
"  update #daco_v32_cal"
"   set fs062_1k_3m = v1"
"   from #tmp1 as a"
"   where a.idn = #daco_v32_cal.idn"
"     and mon=3;"
"  /* Initial global variables */"
"  set @months = (select @now - min(start_mon_since) from #krm021_dedup);"
"  delete from #open_issuer;"
"  delete from #lines;"
"  set @i = 0;"
"  while @i <= (@months)"
"   begin"
"    insert into #open_issuer (idn, issuer, mon)"
"    select idn, issue, (@now - @i)"
"    from #krm021_dedup"
"    where (end_mon_since > (@now - @i))"
"      and (start_mon_since < (@now - @i))"
"    set @i = @i + 1"
"   end;"
" "
"  insert into #lines (idn, issuer, mon, line)"
"   select idn, issue, start_mon_since, max(convert(decimal(16, 8), limit))"
"   from #krm021_dedup as a"
"   where @now - start_mon_since <= 12"
"     and issue not in ('021', '081', '974')"
"     and issue not in (select distinct issuer"
" 		      from #open_issuer as b"
" 		      where a.idn = b.idn"
" 		        and b.mon = a.start_mon_since)"
"   group by idn, issue, start_mon_since;"
" /* ---start making fs008--- */"
" /*--Open_Issuer to store all open cards which are not issued by Citi, AIG, and HSBC--*/"
" /*--TMP to store lines closed, OO and MO--*/"
" /*OO stands for one-card-one-line, MO stands for Multi-card-one-line*/"
" /*--Lines to store maximum newly closed lines for each customer on each issuer during specific time frame(month)--*/"
" /*--TMP1 to store line closed for each customer during specific time frame--(3, 6, 9, 12 months)*/"
"  delete from #tmp1;"
"  delete from #tmp;"
"  insert into #tmp1 (idn, mon, v1)"
"   select idn, 13, count(distinct issue)"
"   from #krm021_dedup as a"
"   where end_mon_since < 12000"
"     and stop_code = '3'"
"     and issue not in ('021', '081', '974')"
"     and issue not in (select distinct issuer"
"   		      from #open_issuer as b"
"   		      where a.idn = b.idn"
"   		        and a.end_mon_since = b.mon)"
"   group by idn;"
"  insert into #tmp (idn, mon, v1, v2, v3)"
"   select distinct idn, 13, 0, 0, 0"
"   from #krm021_dedup;"
"  update #tmp"
"   set v1 = a.v1"
"   from #tmp1 as a"
"   where a.idn = #tmp.idn"
"     and a.mon = #tmp.mon;"
"  delete from #tmp1;"
"  insert into #tmp1 (idn, mon, v1)"
"   select idn, 13, count(*)"
"   from #krm021_dedup"
"   where stop_code = '3'"
"     and issue in ('021', '081', '974')"
"     and end_mon_since < 12000"
"   group by idn;"
"  update #tmp"
"   set v2 = a.v1"
"   from #tmp1 as a"
"   where a.idn = #tmp.idn"
"     and a.mon = #tmp.mon;"
"  update #daco_v32_cal"
"   set fs008_12mplus = v1 + v2"
"   from #tmp as a"
"   where a.idn = #daco_v32_cal.idn"
"     and mon = 13;"
" /* ---start making fs040--- */"
"  delete from #tmp1;"
"  insert into #tmp1 (idn, v1)"
"   select idn, count(*)"
"   from #bam085_dedup"
"   where account_code2=''"
"      or account_code2 is null"
"  group by idn;"
"  update #daco_v32_cal"
"   set fs040 = v1"
"   from #tmp1 as a"
"   where a.idn = #daco_v32_cal.idn;"
" /* ---start making fs101--- */"
"  delete from #tmp1;"
"  insert into #tmp1 (idn, mon, v1)"
"   select idn, 9, count(distinct issue)"
"   from #krm023_dedup"
"   where (@now - mon_since) <= 9"
"     and (@now - mon_since) > 0"
" group by idn;"
"   update #daco_v32_cal"
"    set fs101_9m = v1"
"    from #tmp1 as a"
"    where a.idn = #daco_v32_cal.idn"
"      and mon=9;"
" /* ---start making fs105--- */"
"   delete from #tmp1;"
"   delete from #tmp;"
"   insert into #tmp1 (idn, mon, v1)"
"    select idn, mon_since, sum(case when cash = 'Y' then 1 else 0 end)"
"    from #krm023_dedup"
"    group by idn, mon_since;"
"   insert into #tmp (idn, mon, v1)"
"    select idn, 6, avg(v1)"
"    from #tmp1"
"    where (@now - mon) <= 6"
"      and (@now - mon) > 0"
"    group by idn;"
"   update #daco_v32_cal"
"    set fs105_6m = v1"
"    from #tmp as a"
"    where a.idn = #daco_v32_cal.idn"
"    and mon=6;"
" /* ---start making ms001--- */"
"   delete from #tmp1;"
"   delete from #tmp;"
"   insert into #tmp1 (idn, mon, v1)"
"    select idn, mon_since, sum(payment_amt)"
"    from #krm023_dedup"
"    where bucket_ef_1k >= 1"
"    group by idn, mon_since;"
"   insert into #tmp (idn, mon, v1)"
"    select idn, 12, max(v1)"
"    from #tmp1"
"    where (@now - mon)<= 12"
"      and (@now - mon) > 0"
"    group by idn;"
"   update #daco_v32_cal"
"    set ms001_1k_12m = v1"
"    from #tmp as a"
"    where a.idn = #daco_v32_cal.idn"
"    and mon=12;"
" /* ---start making ms006--- */"
"   delete from #tmp1;"
"   delete from #tmp;"
"   insert into #tmp1 (idn, mon, v1)"
"    select idn, mon_since, sum(payment_amt)"
"    from #krm023_dedup"
"    where bucket_f_1k >= 3"
"    group by idn, mon_since;"
"   set @i = 3"
"   while @i <= 6"
"    begin"
"     insert into #tmp(idn, mon, v1)"
"      select idn, @i, max(v1)"
"      from #tmp1"
"      where (@now - mon) <= @i"
"        and (@now - mon) > 0"
"      group by idn"
"      set @i = @i + 3"
"    end;"
"   update #daco_v32_cal"
"    set ms006_1k_3m = v1"
"    from #tmp as a"
"    where a.idn = #daco_v32_cal.idn"
"      and mon=3;"
"   update #daco_v32_cal"
"    set ms006_1k_6m = v1"
"    from #tmp as a"
"    where a.idn = #daco_v32_cal.idn"
"      and mon=6;"
" /* ---start making ms009--- */"
"   delete from #tmp1;"
"   delete from #tmp;"
"   insert into #tmp1 (idn, mon, v1)"
"    select idn, mon_since, sum(payment_amt)"
"    from #krm023_dedup"
"    group by idn, mon_since;"
"   set @i = 3"
"   while @i <= 6"
"    begin"
"     insert into #tmp (idn, mon, v1)"
"      select idn, @i, avg(v1)"
"      from #tmp1"
"      where (@now - mon) <= @i"
"        and (@now - mon) > 0"
"      group by idn"
"     set @i = @i + 3"
"    end;"
"   update #daco_v32_cal"
"    set ms009_3m = v1"
"    from #tmp as a"
"    where a.idn = #daco_v32_cal.idn"
"      and mon=3;"
"   update #daco_v32_cal"
"    set ms009_6m = v1"
"    from #tmp as a"
"    where a.idn = #daco_v32_cal.idn"
"      and mon=6;"
" /* ---start making ms011--- */"
"   delete from #tmp1;"
"   delete from #tmp;"
"   insert into #tmp1 (idn, mon, v1)"
"    select idn, mon_since, sum(case when pay_code in ('A', 'B') then payment_amt else 0 end)"
"    from #krm023_dedup"
"    group by idn, mon_since;"
"   set @i = 3"
"   while @i <= 12"
"    begin"
"     insert into #tmp (idn, mon, v1)"
"      select idn, @i, avg(v1)"
"      from #tmp1"
"      where (@now - mon) <= @i"
"        and (@now - mon) > 0"
"      group by idn"
"     set @i = @i + 3"
"    end;"
"   update #daco_v32_cal"
"    set ms011_3m = v1"
"    from #tmp as a"
"    where a.idn = #daco_v32_cal.idn"
"      and mon=3;"
"   update #daco_v32_cal"
"    set ms011_6m = v1"
"    from #tmp as a"
"    where a.idn = #daco_v32_cal.idn"
"      and mon=6;"
"   update #daco_v32_cal"
"    set ms011_9m = v1"
"    from #tmp as a"
"    where a.idn = #daco_v32_cal.idn"
"      and mon=9;"
"   update #daco_v32_cal"
"    set ms011_12m = v1"
"    from #tmp as a"
"    where a.idn = #daco_v32_cal.idn"
"      and mon=12;"
" /* ---start making ms015--- */"
"   delete from #tmp1;"
"   insert into #tmp1 (idn, mon, v1)"
"    select idn, 3, max(payment_amt / convert(decimal(16, 8), limit))"
"    from #krm023_dedup"
"    where (@now - mon_since) <= 3"
"      and (@now - mon_since) > 0"
"      and pay_code = 'C'"
"      and convert(decimal(16, 8), limit) <> 0"
"    group by idn;"
"   update #daco_v32_cal"
"    set ms015_3m = v1"
"    from #tmp1 as a"
"    where a.idn = #daco_v32_cal.idn"
"      and mon=3;"
" /* ---start making ms106--- */"
"   delete from #tmp1;"
"   delete from #tmp;"
"   insert into #tmp1 (idn, mon, v1)"
"    select idn, mon_since, sum(case when pay_code in ('C', 'D', 'E', 'F') then payment_amt"
"   				   else 0 end)"
"    from #krm023_dedup"
"    group by idn, mon_since;"
"   set @i = 3"
"   while @i <= 12"
"    begin"
"     insert into #tmp (idn, mon, v1)"
"      select idn, @i, avg(v1)"
"      from #tmp1"
"      where (@now - mon) <= @i"
"        and (@now - mon) > 0"
"      group by idn"
"     set @i = @i + 3"
"    end;"
"   update #daco_v32_cal"
"    set ms106_3m = v1"
"    from #tmp as a"
"    where a.idn = #daco_v32_cal.idn"
"      and mon=3;"
"   update #daco_v32_cal"
"    set ms106_9m = v1"
"    from #tmp as a"
"    where a.idn = #daco_v32_cal.idn"
"      and mon=9;"
"   update #daco_v32_cal"
"    set ms106_12m = v1"
"    from #tmp as a"
"    where a.idn = #daco_v32_cal.idn"
"      and mon=12;"
" /* ---start making ms110--- */"
"   delete from #tmp1;"
"   delete from #tmp;"
"   insert into #tmp1 (idn, mon, v1)"
"    select idn, mon_since, sum(convert(decimal(16, 8), limit))"
"    from #krm023_dedup"
"    group by idn, mon_since;"
"   set @i = 3"
"   while @i <= 12"
"    begin"
"     insert into #tmp (idn, mon, v1)"
"      select idn, @i, max(v1)"
"      from #tmp1"
"      where (@now - mon) <= @i"
"        and (@now - mon) > 0"
"      group by idn"
"     set @i = @i + 3"
"    end;"
"   update #daco_v32_cal"
"   set ms110_3m = (case when v1=0 then null else ms106_3m / v1 end)"
"   from #tmp as a"
"   where a.idn = #daco_v32_cal.idn"
"     and mon=3;"
"   update #daco_v32_cal"
"    set ms110_9m = (case when v1=0 then null else ms106_9m / v1 end)"
"    from #tmp as a"
"    where a.idn = #daco_v32_cal.idn"
"      and mon=9;"
"   update #daco_v32_cal"
"    set ms110_12m = (case when v1=0 then null else ms106_12m / v1 end)"
"    from #tmp as a"
"    where a.idn = #daco_v32_cal.idn"
"      and mon=12;"
" /* ---Prepare intermediate tables for KRM023 and krm021 variables --- */"
"   set @i = 0"
"   while @i <= 13"
"    begin"
"     insert into #open_card (idn, issue, mon)"
"      select idn, issue, (@now - @i)"
"      from #krm021_dedup"
"      where (end_mon_since >= (@now - @i))"
"        and (start_mon_since < (@now - @i))"
"        and issue != '021'"
"     set @i = @i + 1"
"    end;"
"   insert into #open_line (idn, issue, mon, cards)"
"    select idn, issue, mon, count(*)"
"    from #open_card"
"    group by idn, issue, mon;"
"   set @i = 0"
"   while @i <= 13"
"    begin"
"     insert into #open_line (idn, issue, mon, cards)"
"      select idn,"
"             (case when card_brand = 'M' then 'CTM'"
"                   when card_brand = 'V' then 'CTV'"
"                   when card_brand = 'D' then 'CTD' end),"
"             (@now - @i),"
"             1"
"      from #krm021_dedup"
"      where (end_mon_since >= (@now - @i))"
"        and (start_mon_since < (@now - @i))"
"        and issue = '021'"
"     set @i = @i + 1"
"    end;"
"   update #open_line"
"    set bucket = 1;"
" /*arbitrary number, just to make sure it will out-of-range*/"
"   update #open_line"
"    set bucket = 100"
"    where mon = (@now - 13);"
"   set @i = 13;"
"   while @i > 0"
"    begin"
"     update #open_line"
"      set bucket = a.bucket + 1"
"      from #open_line as a inner join #open_line"
"        on a.idn = #open_line.idn"
"       and a.issue = #open_line.issue"
"       and a.mon = (#open_line.mon - 1)"
"      where (@now - a.mon) = @i"
"     set @i = @i - 1"
"    end;"
"   insert into #latest_stmt_mon (idn, issue, mon)"
"    select idn, issue, max(mon)"
"    from #open_line"
"    where mon < @now"
"    group by idn, issue;"
"   insert into #latest_line (idn, issue, mon, mob)"
"    select a.idn, a.issue, a.mon, a.bucket"
"    from #open_line as a inner join #latest_stmt_mon as b"
"      on a.idn = b.idn"
"     and a.issue = b.issue"
"     and a.mon = b.mon;"
" /* ---start making ms203_1k--- */"
"   delete from #tmp1;"
"   set @i = 3"
"   while @i <= 9"
"    begin"
"     insert into #tmp1 (idn, mon, v1)"
"      select idn, @i, sum(payment_amt)"
"      from #krm023_dedup as a"
"      where issue in (select issue"
"      		     from #latest_line"
"    		     where mob <= 12 and idn = a.idn)"
"        and bucket_def_1k <> 0"
"        and @now - mon_since <= @i"
"        and @now - mon_since > 0"
"      group by idn"
"     set @i = @i + 3"
"    end;"
"   update #daco_v32_cal"
"    set ms203_1k_3m = v1"
"    from #tmp1 as a"
"    where a.idn = #daco_v32_cal.idn"
"      and a.mon = 3;"
"   update #daco_v32_cal"
"    set ms203_1k_6m = v1"
"    from #tmp1 as a"
"    where a.idn = #daco_v32_cal.idn"
"    and a.mon = 6;"
"   update #daco_v32_cal"
"    set ms203_1k_9m = v1"
"    from #tmp1 as a"
"    where a.idn = #daco_v32_cal.idn"
"      and a.mon = 9;"
" /* ---start making ms205_1k--- */"
"   delete from #tmp1;"
"   set @i = 3"
"   while @i <= 6"
"    begin"
"     insert into #tmp1"
"      select idn, @i, sum(payment_amt)"
"      from #krm023_dedup as a"
"      where issue in (select issue"
"      		     from #latest_line"
"    		     where mob <= 12"
"    		       and idn = a.idn)"
"        and pay_code in ('C', 'D', 'E','F')"
"        and payment_amt > 1"
"        and (@now - mon_since) <= @i"
"        and (@now - mon_since) > 0"
"       group by idn"
"      set @i = @i + 3"
"     end;"
"   update #daco_v32_cal"
"    set ms205_1k_3m = v1"
"    from #tmp1 as a"
"    where a.idn = #daco_v32_cal.idn"
"      and a.mon = 3;"
"   update #daco_v32_cal"
"    set ms205_1k_6m = v1"
"    from #tmp1 as a"
"    where a.idn = #daco_v32_cal.idn"
"      and a.mon = 6;"
" /* ---start making transformed variables--- */"
"   update #daco_v32_cal"
"    set mt110_41 =  ms110_3m -  ms110_12m +  ms110_9m,"
"        mt203_1k_42 = ms203_1k_3m - ms203_1k_9m + ms203_1k_6m,"
"        mt205_1k_43 = 2 * ms205_1k_3m - ms205_1k_6m,"
"        mt006_1k_43 = 2 * ms006_1k_3m - ms006_1k_6m,"
"        mt009_43 = 2 * ms009_3m - ms009_6m,"
"        mt011_31 = ms011_6m - ms011_3m - ms011_12m + ms011_9m"
"   update #daco_v32_cal"
"    set mt110_41_r = power((case when mt110_41 < 0 then null else mt110_41 end), 0.5),"
"        fs002_1k_9m_q = power(fs002_1k_9m, 2),"
"        mt203_1k_42_r = power((case when mt203_1k_42 < 0 then null else mt203_1k_42 end), 0.5),"
"        fs105_6m_q = power(fs105_6m, 2),"
"        mt011_31_z = (case when mt011_31 = 0 then 1 else 0 end),"
"        fs062_1k_3m_z = (case when fs062_1k_3m = 0 then 1 else 0 end),"
"        fs040_tran = (case when fs040 is null then -0.66"
"   			  when fs040 > 6 then 6 else fs040 end),"
"        fs008_12mplus_r = power((case when fs008_12mplus < 0 then null else fs008_12mplus end), 0.5),"
"        ms015_3m_q = power(ms015_3m, 2),"
"        mt205_1k_43_r = power((case when mt205_1k_43 < 0 then null else mt205_1k_43 end), 0.5),"
"        ms001_1k_12m_r = power((case when ms001_1k_12m < 0 then null else ms001_1k_12m end), 0.5),"
"        fs101_9m_z = (case when fs101_9m = 0 then 1 else 0 end),"
"        mt006_1k_43_r = power((case when mt006_1k_43 < 0 then null else mt006_1k_43 end), 0.5),"
"        int015 = (case when fs101_9m = 0 then null else fs016_9m / fs101_9m end),"
"        mt009_43_q = power(mt009_43, 2)"
"   update #daco_v32_cal"
"    set mt110_41_r_t = (case when (case when mt110_41_r is null then 0 else mt110_41_r end) < 0.1 then 0.1"
"    				       else mt110_41_r end),"
"        fs002_1k_9m_q_tran = (case when fs002_1k_9m_q is null then 0"
"   				  when fs002_1k_9m_q > 15 then 15 else fs002_1k_9m_q end),"
"        mt203_1k_42_r_t = (case when mt203_1k_42_r is null then 0"
"    			       when mt203_1k_42_r > 10 then 10"
"    			       else mt203_1k_42_r end),"
"        fs105_6m_q_t = (case when fs105_6m_q is null then -1"
"        			    when fs105_6m_q > 5 then 5"
"        			    else fs105_6m_q end),"
"        fs008_12mplus_r_tran = (case when fs008_12mplus_r is null then 0"
"   				    else fs008_12mplus_r end),"
"        ms015_3m_q_t2 = (case when ms015_3m_q is null then -1"
"   			     else ms015_3m_q end),"
"        mt205_1k_43_r_tran = (case when mt205_1k_43_r is null then 0"
"   				  when mt205_1k_43_r > 16 then 16 else mt205_1k_43_r end),"
"        ms001_1k_12m_r_t2= (case when ms001_1k_12m_r is null then -1"
"   				when ms001_1k_12m_r > 10 then 10 else ms001_1k_12m_r end),"
"        mt006_1k_43_r_tran = (case when mt006_1k_43_r is null then 0"
"   				  else mt006_1k_43_r end),"
"        int015_tran = (case when int015 is null then 0 else int015 end),"
"        mt009_43_q_t=(case when mt009_43_q > 100000 then 1 else 0 end);"
" /* ---start making DACO score v3.2--- */"
"   update #daco_v32_cal"
"    set daco_score = 0.11749"
"    	       + mt110_41_r_t		*	0.05881"
"    	       + fs002_1k_9m_q_tran	*	0.01392"
"    	       + mt203_1k_42_r_t	*	0.02413"
"    	       + fs105_6m_q_t		*	0.02641"
"    	       + mt011_31_z		*	0.11239"
"    	       + fs062_1k_3m_z		*	-0.12863"
"    	       + fs040_tran		*	0.01964"
"    	       + fs008_12mplus_r_tran	*	0.18621"
"    	       + ms015_3m_q_t2		*	0.03267"
"    	       + mt205_1k_43_r_tran	*	0.00550"
"    	       + ms001_1k_12m_r_t2	*	0.00678"
"    	       + fs101_9m_z		*	0.26346"
"    	       + mt006_1k_43_r_tran	*	0.04240"
"    	       + int015_tran		*	0.06637"
"    	       + mt009_43_q_t		*	0.05416;"
" /* -- end of procedure generate_daco32_score --*/",

/* Drop_Procedure_Generate_Ploan_Score */
" if exists (select * from dbo.sysobjects where id = object_id(N'[generate_ploan_score]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)"
" drop procedure generate_ploan_score;",

/* Exec_Procedure_Generate_Ploan_Score */
" execute generate_ploan_score :v1;",

/* Create_Procedure_Generate_Ploan_Score */
" CREATE PROCEDURE generate_ploan_score"
" (@now int)"
" AS"
" declare @i int"
" /* create temportary intermediate tables */"
" create table #tmp ("
"   idn char(11),"
"   mon int,"
"   v1 decimal (16, 8),"
"   v2 decimal (16, 8),"
"   v3 decimal (16, 8));"
" create table #tmp1 ("
"   idn char(11),"
"   mon int,"
"   v1 decimal (16, 8));"
" create table #open_issuer ("
"   idn char(11),"
"   issuer char(3),"
"   mon int);"
" create table #lines ("
"  idn char(11),"
"  issuer char(3),"
"  mon int,"
"  line decimal (16, 8));"
" create table #open_card ("
"  idn char(11),"
"  issue char(3),"
"  mon int);"
" create table #open_line ("
"  idn char(11),"
"  issue char(3),"
"  mon int,"
"  cards int,"
"  bucket int);"
" create table #latest_stmt_mon ("
"  idn char(11),"
"  issue char(3),"
"  mon int);"
" create table #latest_line ("
"  idn char(11),"
"  issue char(3),"
"  mon int,"
"  mob int);"
" /* ---start making fs025_12m--- */"
" set @i = 0;"
" while @i <= 12"
" begin"
"   insert into #open_issuer (idn, issuer, mon)"
"    select idn, issue, (@now - @i)"
"    from #krm021_dedup"
"    where (end_mon_since > (@now - @i))"
"      and (start_mon_since < (@now - @i))"
"      and issue not in ('021', '081', '974')"
"      and convert(decimal(16, 8), limit) > 100"
"   set @i = @i + 1"
" end;"
" set @i = 3;"
" while @i <= 12"
" begin"
"   insert into #tmp1 (idn, mon, v1)"
"   select idn, @i, count(distinct issuer)"
"   from #open_issuer"
"   where (@now - mon) <= @i"
"     and (@now - mon) > 0"
"   group by idn"
"   set @i = @i + 3"
" end;"
" set @i = 3;"
" while @i <= 12"
" begin"
"   insert into #tmp (idn, mon, v1, v2, v3)"
"    select distinct idn, @i, 0, 0, 0"
"    from #krm021_dedup"
"   set @i = @i + 3"
" end;"
" update #tmp"
" set v1 = a.v1"
" from #tmp1 as a"
" where a.idn = #tmp.idn and"
"       a.mon = #tmp.mon;"
" delete #tmp1;"
" set @i = 3;"
" while @i<=12"
" begin"
"   insert into #tmp1 (idn, mon, v1)"
"   select idn, @i, count(*)"
"   from #krm021_dedup"
"   where (@now - end_mon_since) <= @i"
"     and (@now - end_mon_since) > 0"
"     and issue in ('021', '081', '974')"
"     and convert(decimal(16, 8), limit) > 100"
"   group by idn;"
"   set @i = @i + 3"
" end;"
" update #tmp"
" set v2 = a.v1"
" from #tmp1 as a"
" where a.idn = #tmp.idn and"
"       a.mon = #tmp.mon;"
" update #daco_v32_cal"
" set fs025_12m = v1 + v2"
" from #tmp as a"
" where a.idn = #daco_v32_cal.idn and"
"       mon = 12;"
" /*---start making fs029---*/"
" delete from #tmp;"
" update #daco_v32_cal"
" set fs029 = 0"
" from #stm001_dedup as a"
" where #daco_v32_cal.idn = a.idn"
" insert into #tmp (idn, v1)"
"  select idn, count(*)"
"  from #stm001_dedup"
"  where item_list like '%K%'"
"    and (@now - query_mon_since) <= 12"
"    and (@now - query_mon_since) > 0"
"  group by idn;"
" update #daco_v32_cal"
" set fs029 = v1"
" from #tmp as a"
" where a.idn = #daco_v32_cal.idn;"
" /*---start making fs051---*/"
" delete from #tmp;"
" update #daco_v32_cal"
" set fs051 = 0"
" from #bam085_dedup as a"
" where #daco_v32_cal.idn = a.idn"
" insert into #tmp (idn, v1)"
"  select idn, count(*)"
"  from #bam085_dedup"
"  where purpose_code = '4'"
"  group by idn;"
" update #daco_v32_cal"
"  set fs051 = v1"
"  from #tmp as a"
"  where a.idn = #daco_v32_cal.idn;"
" /* ---Prepare intermediate tables for KRM023 and krm021 variables --- */"
"   set @i = 0"
"   while @i <= 13"
"    begin"
"     insert into #open_card (idn, issue, mon)"
"      select idn, issue, (@now - @i)"
"      from #krm021_dedup"
"      where (end_mon_since >= (@now - @i))"
"        and (start_mon_since < (@now - @i))"
"        and issue != '021'"
"     set @i = @i + 1"
"    end;"
"   insert into #open_line (idn, issue, mon, cards)"
"    select idn, issue, mon, count(*)"
"    from #open_card"
"    group by idn, issue, mon;"
"   set @i = 0"
"   while @i <= 13"
"    begin"
"     insert into #open_line (idn, issue, mon, cards)"
"      select idn, (case when card_brand = 'M' then 'CTM'"
"                        when card_brand = 'V' then 'CTV'"
"                        when card_brand = 'D' then 'CTD' end), (@now - @i), 1"
"      from #krm021_dedup"
"      where (end_mon_since >= (@now - @i))"
"        and (start_mon_since < (@now - @i))"
"        and issue = '021'"
"     set @i = @i + 1"
"    end;"
"   update #open_line"
"    set bucket = 1;"
"   update #open_line"
"    set bucket = 100"
"    where mon = (@now - 13);"
"   set @i = 13;"
"   while @i > 0"
"    begin"
"     update #open_line"
"      set bucket = a.bucket + 1"
"      from #open_line as a inner join #open_line"
"        on a.idn = #open_line.idn"
"       and a.issue = #open_line.issue"
"       and a.mon = (#open_line.mon - 1)"
"      where (@now - a.mon) = @i"
"     set @i = @i - 1"
"    end;"
"   insert into #latest_stmt_mon (idn, issue, mon)"
"    select idn, issue, max(mon)"
"    from #open_line"
"    where mon < @now"
"    group by idn, issue;"
"   insert into #latest_line (idn, issue, mon, mob)"
"    select a.idn, a.issue, a.mon, a.bucket"
"    from #open_line as a inner join #latest_stmt_mon as b"
"      on a.idn = b.idn"
"     and a.issue = b.issue"
"     and a.mon = b.mon;"
"  update #daco_v32_cal"
"  set fs203_3m_1k = 0, fs203_6m_1k = 0"
"  from #krm023_dedup as a, #krm021_dedup as b"
"  where a.idn = b.idn and"
"        a.idn = #daco_v32_cal.idn and"
"        ((a.issue = b.issue) or ((b.issue = '021') and (a.issue in ('CTV', 'CTM', 'CTD'))))"
" /*---start making fs203_1k---*/"
" delete from #tmp1;"
" set @i = 3;"
" while @i <= 12"
" begin"
"   insert into #tmp1 (idn, mon, v1)"
"   select idn, @i, count(*)"
"   from #krm023_dedup as a"
"   where issue in (select issue from #latest_line"
"     		   where mob <= 12 and idn = a.idn)"
"     and bucket_def_1k != 0"
"     and (@now - mon_since) <= @i"
"     and (@now - mon_since) > 0"
"   group by idn"
"   set @i = @i + 3;"
" end;"
" update #daco_v32_cal"
" set fs203_3m_1k = v1"
" from #tmp1 as a"
" where a.idn = #daco_v32_cal.idn and"
"       a.mon = 3;"
" update #daco_v32_cal"
" set fs203_6m_1k = v1"
" from #tmp1 as a"
" where a.idn = #daco_v32_cal.idn and"
"       a.mon = 6;"
" /* Initial ms024 and ms119 variable */"
" update #daco_v32_cal"
" set ms024_3m = 0,"
"     ms024_6m = 0,"
"     ms024_9m = 0,"
"     ms119_12m = 0"
" from #krm023_dedup as a"
" where #daco_v32_cal.idn = a.idn"
" /*---start making ms024---*/"
" delete from #tmp;"
" set @i = 3;"
" while @i <= 12"
" begin"
"   insert into #tmp (idn, mon, v1)"
"   select idn, @i, avg(convert(decimal (16, 8),limit))"
"   from #krm023_dedup"
"   where (@now - mon_since) <= @i"
"     and (@now - mon_since) > 0"
"     and convert(decimal (16, 8), limit) > 0"
"   group by idn"
"   set @i = @i + 3"
" end;"
" update #daco_v32_cal"
"  set ms024_3m = v1"
"  from #tmp as a"
"  where a.idn = #daco_v32_cal.idn"
"    and mon=3;"
" update #daco_v32_cal"
"  set ms024_6m = v1"
"  from #tmp as a"
"  where a.idn = #daco_v32_cal.idn"
"    and mon=6;"
" update #daco_v32_cal"
"  set ms024_9m = v1"
"  from #tmp as a"
"  where a.idn = #daco_v32_cal.idn"
"    and mon=9;"
" /*---start making ms119---*/"
" delete from #tmp;"
" set @i = 12;"
" while @i <= 12"
" begin"
"   insert into #tmp (idn, mon, v1)"
"   select idn, @i, min(payment_amt / convert(decimal(16, 8), limit))"
"   from #krm023_dedup"
"   where (@now - mon_since) <= @i"
"     and (@now - mon_since) > 0"
"     and pay_code in ('A', 'B', 'C', 'D')"
"     and convert(decimal(16, 8), limit) <> 0"
"   group by idn"
"   set @i = @i + 3"
" end;"
" update #daco_v32_cal"
"  set ms119_12m = v1"
"  from #tmp as a"
"  where a.idn = #daco_v32_cal.idn"
"    and mon = 12;"
" /*---start making column sex---*/"
" update #daco_v32_cal"
"  set sex = (case when right(left(idn, 2), 1) = '1' then 1"
"                  else 0 end);"
" /*---start making apr group---*/"
"  update #daco_v32_cal"
"   set guarantor = a.guarantor,"
"       segment = a.segment"
"   from app_info a"
"   where a.case_sn = #daco_v32_cal.case_sn"
"     and a.idn = #daco_v32_cal.idn"
"     and a.dac_sn = #daco_v32_cal.dac_sn;"
"  update #daco_v32_cal"
"   set apr_group = (case when segment = '01' then 1"
"                         when segment = '02' then 2"
"                         when segment = '03' then 3"
"                         when segment = '04' then 4"
"                         when segment = '05' then 5"
"                         else 6 end)"
" /*---start making transformed variables---*/"
" update #daco_v32_cal"
"  set mt024_32 =2 * ms024_6m - ms024_3m - ms024_9m,"
"     ft203_43_1k = 2 * fs203_3m_1k - fs203_6m_1k,"
"     fs025_12m_z = (case when fs025_12m = 0 then 1"
"     			else 0 end),"
"     fs029_t = (case when fs029 is null then -1"
"                      else fs029 end),"
"     fs051_t2 = (case when fs051 is null then 2"
"     		     when fs051 = 0 then 1"
"     		     when fs051 > 3.5 then 7"
"                      else fs051 end),"
"     sex_t = (case when sex = 1 then 1 else 0 end);"
" update #daco_v32_cal"
" set fs029_t2 = (case when fs029_t > 3 then 3"
"                      when fs029_t < 1 then 0.5"
"                      else fs029_t end),"
"     ft203_43_1k_r = power ((case when ft203_43_1k < 0 then null else ft203_43_1k end), 0.5),"
"     mt024_32_r = power ((case when mt024_32 < 0 then null else mt024_32 end), 0.5);"
" update #daco_v32_cal"
" set ft203_43_1k_r_t = (case when ft203_43_1k_r is null then 0.42"
"     			 else ft203_43_1k_r end),"
"     mt024_32_r_t = (case when mt024_32_r is null then 2"
"     			 else mt024_32_r end);"
" update #daco_v32_cal"
" set ft203_43_1k_r_t3 = (case when ft203_43_1k_r_t > 1.3 then 2"
"     			     else ft203_43_1k_r_t end);"
" /*---start making risk score---*/"
"  update #daco_v32_cal"
"  set rscore = -0.06015 +"
" 	FS029_t2 * 0.04523 +"
" 	FT203_43_1K_r_t3 * 0.10504 +"
" 	MS119_12M * 0.15189 +"
" 	MT024_32_r_t * -0.0257 +"
" 	sex_t * 0.04235 +"
" 	FS025_12M_z * 0.085 +"
" 	daco_score * 0.09959 +"
" 	FS051_t2 * 0.01121;"
" /*---start making twentile---*/"
"  update #daco_v32_cal"
"   set twentile = (case when rscore is null then 0"
"               when rscore <= -0.0535  then 1"
"               when rscore <= -0.03352 then 2"
"               when rscore <= -0.0204  then 3"
"               when rscore <= -0.00882 then 4"
"               when rscore <= 0.00329  then 5"
"               when rscore <= 0.01644  then 6"
"               when rscore <= 0.02858  then 7"
"               when rscore <= 0.04205  then 8"
"               when rscore <= 0.05545  then 9"
"               when rscore <= 0.06814  then 10"
"               when rscore <= 0.08128  then 11"
"               when rscore <= 0.09494  then 12"
"               when rscore <= 0.10899  then 13"
"               when rscore <= 0.12486  then 14"
"               when rscore <= 0.14204  then 15"
"               when rscore <= 0.16105  then 16"
"               when rscore <= 0.18556  then 17"
"               when rscore <= 0.21697  then 18"
"               when rscore <= 0.2716   then 19"
"               else 20 end)"
" /*---start making pd---*/"
"  declare @guarantor char(1)"
"  set @guarantor = (select guarantor from #daco_v32_cal)"
"  if @guarantor = '0'"
"     begin"
"       update #daco_v32_cal"
"         set pd = (case"
"                     when twentile = 1 and apr_group = 1 then 0.00130034996811624"
"                     when twentile = 2 and apr_group = 1 then 0.00260063630566589"
"                     when twentile = 3 and apr_group = 1 then 0.00390115691939253"
"                     when twentile = 4 and apr_group = 1 then 0.00520210348980461"
"                     when twentile = 5 and apr_group = 1 then 0.00650382452691747"
"                     when twentile = 6 and apr_group = 1 then 0.00780695368530448"
"                     when twentile = 7 and apr_group = 1 then 0.00911264306418997"
"                     when twentile = 8 and apr_group = 1 then 0.0104229873894363"
"                     when twentile = 9 and apr_group = 1 then 0.0117417952535206"
"                     when twentile = 10 and apr_group = 1 then 0.0130759913700374"
"                     when twentile = 11 and apr_group = 1 then 0.0144381661273407"
"                     when twentile = 12 and apr_group = 1 then 0.0158512111406194"
"                     when twentile = 13 and apr_group = 1 then 0.0173567475283989"
"                     when twentile = 14 and apr_group = 1 then 0.0190304500516343"
"                     when twentile = 15 and apr_group = 1 then 0.0210099091847896"
"                     when twentile = 16 and apr_group = 1 then 0.0235452894268902"
"                     when twentile = 17 and apr_group = 1 then 0.0270914353216186"
"                     when twentile = 18 and apr_group = 1 then 0.0324753369483975"
"                     when twentile = 19 and apr_group = 1 then 0.04120061263345"
"                     when twentile = 20 and apr_group = 1 then 0.056001113879"
"                     when twentile = 1 and apr_group = 2 then 0.00150035005507334"
"                     when twentile = 2 and apr_group = 2 then 0.0030006364637697"
"                     when twentile = 3 and apr_group = 2 then 0.004501157206854"
"                     when twentile = 4 and apr_group = 2 then 0.00600210401246182"
"                     when twentile = 5 and apr_group = 2 then 0.00750382547720331"
"                     when twentile = 6 and apr_group = 2 then 0.00900695541309692"
"                     when twentile = 7 and apr_group = 2 then 0.0105126462056308"
"                     when twentile = 8 and apr_group = 2 then 0.0120229931011468"
"                     when twentile = 9 and apr_group = 2 then 0.0135418056384488"
"                     when twentile = 10 and apr_group = 2 then 0.0150760102517251"
"                     when twentile = 11 and apr_group = 2 then 0.016638200457682"
"                     when twentile = 12 and apr_group = 2 then 0.0182512735594219"
"                     when twentile = 13 and apr_group = 2 then 0.0199568610171307"
"                     when twentile = 14 and apr_group = 2 then 0.0218306563947831"
"                     when twentile = 15 and apr_group = 2 then 0.024010284354151"
"                     when twentile = 16 and apr_group = 2 then 0.0267459715530019"
"                     when twentile = 17 and apr_group = 2 then 0.0304926755509125"
"                     when twentile = 18 and apr_group = 2 then 0.03607759191075"
"                     when twentile = 19 and apr_group = 2 then 0.045004712565"
"                     when twentile = 20 and apr_group = 2 then 0.0600085683"
"                     when twentile = 1 and apr_group = 3 then 0.00170035072397406"
"                     when twentile = 2 and apr_group = 3 then 0.00340063767995283"
"                     when twentile = 3 and apr_group = 3 then 0.00510115941809606"
"                     when twentile = 4 and apr_group = 3 then 0.00680210803290192"
"                     when twentile = 5 and apr_group = 3 then 0.0085038327870944"
"                     when twentile = 6 and apr_group = 3 then 0.010206968703808"
"                     when twentile = 7 and apr_group = 3 then 0.01191267037056"
"                     when twentile = 8 and apr_group = 3 then 0.0136230370373818"
"                     when twentile = 9 and apr_group = 3 then 0.0153418855225124"
"                     when twentile = 10 and apr_group = 3 then 0.0170761554954771"
"                     when twentile = 11 and apr_group = 3 then 0.0188384645372311"
"                     when twentile = 12 and apr_group = 3 then 0.0206517537040565"
"                     when twentile = 13 and apr_group = 3 then 0.0225577340073755"
"                     when twentile = 14 and apr_group = 3 then 0.0246322436497736"
"                     when twentile = 15 and apr_group = 3 then 0.0270131702723156"
"                     when twentile = 16 and apr_group = 3 then 0.0299512186769375"
"                     when twentile = 17 and apr_group = 3 then 0.03390221577625"
"                     when twentile = 18 and apr_group = 3 then 0.039694937775"
"                     when twentile = 19 and apr_group = 3 then 0.0488362505"
"                     when twentile = 20 and apr_group = 3 then 0.06406591"
"                     when twentile = 1 and apr_group = 4 then 0.00190035586936423"
"                     when twentile = 2 and apr_group = 4 then 0.00380064703520768"
"                     when twentile = 3 and apr_group = 4 then 0.00570117642765033"
"                     when twentile = 4 and apr_group = 4 then 0.00760213895936424"
"                     when twentile = 5 and apr_group = 4 then 0.00950388901702589"
"                     when twentile = 6 and apr_group = 4 then 0.0114070709400471"
"                     when twentile = 7 and apr_group = 4 then 0.013312856254631"
"                     when twentile = 8 and apr_group = 4 then 0.0152233750084201"
"                     when twentile = 9 and apr_group = 4 then 0.0171425000153092"
"                     when twentile = 10 and apr_group = 4 then 0.0190772727551077"
"                     when twentile = 11 and apr_group = 4 then 0.0210404959183776"
"                     when twentile = 12 and apr_group = 4 then 0.0230554471243229"
"                     when twentile = 13 and apr_group = 4 then 0.0251644493169508"
"                     when twentile = 14 and apr_group = 4 then 0.0274444533035469"
"                     when twentile = 15 and apr_group = 4 then 0.0300353696428125"
"                     when twentile = 16 and apr_group = 4 then 0.03319158116875"
"                     when twentile = 17 and apr_group = 4 then 0.037375602125"
"                     when twentile = 18 and apr_group = 4 then 0.0434283675"
"                     when twentile = 19 and apr_group = 4 then 0.05287885"
"                     when twentile = 20 and apr_group = 4 then 0.068507"
"                     when twentile = 1 and apr_group = 5 then 0.0021003954492886"
"                     when twentile = 2 and apr_group = 5 then 0.00420071899870654"
"                     when twentile = 3 and apr_group = 5 then 0.00630130727037553"
"                     when twentile = 4 and apr_group = 5 then 0.00840237685522824"
"                     when twentile = 5 and apr_group = 5 then 0.0105043215549604"
"                     when twentile = 6 and apr_group = 5 then 0.0126078573726553"
"                     when twentile = 7 and apr_group = 5 then 0.0147142861321006"
"                     when twentile = 8 and apr_group = 5 then 0.0168259747856374"
"                     when twentile = 9 and apr_group = 5 then 0.0189472268829771"
"                     when twentile = 10 and apr_group = 5 then 0.0210858670599584"
"                     when twentile = 11 and apr_group = 5 then 0.0232561219271971"
"                     when twentile = 12 and apr_group = 5 then 0.0254838580494492"
"                     when twentile = 13 and apr_group = 5 then 0.0278161055444531"
"                     when twentile = 14 and apr_group = 5 then 0.0303383737171875"
"                     when twentile = 15 and apr_group = 5 then 0.03320613403125"
"                     when twentile = 16 and apr_group = 5 then 0.036702061875"
"                     when twentile = 17 and apr_group = 5 then 0.0413401125"
"                     when twentile = 18 and apr_group = 5 then 0.04805475"
"                     when twentile = 19 and apr_group = 5 then 0.058545"
"                     when twentile = 20 and apr_group = 5 then 0.0759"
"                     when twentile = 1 and apr_group = 6 then 0.00230069991024531"
"                     when twentile = 2 and apr_group = 6 then 0.00460127256408237"
"                     when twentile = 3 and apr_group = 6 then 0.00690231375287704"
"                     when twentile = 4 and apr_group = 6 then 0.0092042068234128"
"                     when twentile = 5 and apr_group = 6 then 0.0115076487698415"
"                     when twentile = 6 and apr_group = 6 then 0.0138139068542572"
"                     when twentile = 7 and apr_group = 6 then 0.0161252851895585"
"                     when twentile = 8 and apr_group = 6 then 0.0184459730719246"
"                     when twentile = 9 and apr_group = 6 then 0.0207835874034993"
"                     when twentile = 10 and apr_group = 6 then 0.0231519770972715"
"                     when twentile = 11 and apr_group = 6 then 0.0255763219950391"
"                     when twentile = 12 and apr_group = 6 then 0.0281024036273438"
"                     when twentile = 13 and apr_group = 6 then 0.030813461140625"
"                     when twentile = 14 and apr_group = 6 then 0.0338608384375"
"                     when twentile = 15 and apr_group = 6 then 0.03751970625"
"                     when twentile = 16 and apr_group = 6 then 0.042290375"
"                     when twentile = 17 and apr_group = 6 then 0.0490825"
"                     when twentile = 18 and apr_group = 6 then 0.05955"
"                     when twentile = 19 and apr_group = 6 then 0.0767"
"                     when twentile = 20 and apr_group = 6 then 0.106"
"                   end)"
"     end"
"  else"
"     begin"
"       update #daco_v32_cal"
"         set pd = (case when twentile = 1 then 0.000531662612693"
"                        when twentile = 2 then 0.000757637332552"
"                        when twentile = 3 then 0.001002484551893"
"                        when twentile = 4 then 0.001270347014504"
"                        when twentile = 5 then 0.001566276846956"
"                        when twentile = 6 then 0.001896435179215"
"                        when twentile = 7 then 0.002268335584408"
"                        when twentile = 8 then 0.002691140956595"
"                        when twentile = 9 then 0.003176025556823"
"                        when twentile = 10 then 0.003736616532711"
"                        when twentile = 11 then 0.004389532356965"
"                        when twentile = 12 then 0.005155039459713"
"                        when twentile = 13 then 0.006057852999651"
"                        when twentile = 14 then 0.007128113414208"
"                        when twentile = 15 then 0.008402577334400"
"                        when twentile = 16 then 0.009926069920000"
"                        when twentile = 17 then 0.011753256000000"
"                        when twentile = 18 then 0.013950800000000"
"                        when twentile = 19 then 0.016600000000000"
"                        when twentile = 20 then 0.019800000000000"
"                    end)"
"     end"
" /* -- end of procedure generate_ploan_score --*/"

};

#endif
