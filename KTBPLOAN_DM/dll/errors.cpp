/****************************************************************************
** Licensed Materials - Property of DAC
**
** (C) COPYRIGHT Decision Analytics Consulting 2005, 2006
** All Rights Reserved.
**
*****************************************************************************
**
** SOURCE FILE NAME: errors.cpp
**
** Description: Prescreen message for first mortgage
**
****************************************************************************/
//---------------------------------------------------------------------------
#pragma hdrstop

#include "errors.h"

//---------------------------------------------------------------------------

#pragma package(smart_init)
Invalid_Msg PRESCREEN_Msg[] = {
	{0,   " "},
	{1,   "本DAC核准模組僅供京城銀行使用。"},
	{2,   "The approval module has expired."},
	{101, "模組建議婉拒，三年內曾經強停 / 拒往 / 退票 / 授信異常。"},
	{102, "模組建議婉拒，任一信用卡連續三個月以上循環繳款不正常。"},
	{103, "模組建議婉拒，任一現金卡最近一個月繳款延遲。"},
	{104, "模組建議婉拒，任一現金卡動用比率 >= 95%。"},
	{105, "模組建議婉拒，任一貸款逾期。"},
	{106, "模組建議婉拒，貢獻度過低。"},
	{107, "模組建議婉拒，任一貸款連續三個月以上繳款不正常。"},
	{108, "模組建議婉拒，信用卡與現金卡餘額過高。"},
	{109, "模組建議婉拒，壞帳機率過高。"},
	{110, "本行信用卡信用不良。"},
	{111, "模組建議婉拒，JCIC資料不足且查詢次數過多。"},
	{112, "模組建議婉拒，JCIC資料不足且有信用卡逾繳紀錄。"},
	{113, "模組建議婉拒，JCIC資料不足且有強制停卡紀錄。"},
	{114, "模組建議婉拒，JCIC資料不足且查詢次數過多。"},
	{115, "模組建議婉拒，JCIC資料不足且有強制停卡紀錄。"},
	{116, "模組建議婉拒，負債過高。"},
	{201, "模組建議人工審核，JCIC資料不足。"},
	{202, "模組建議人工審核，申請金額超過限制。"},
	{301, "無法辨識產品性質別。"},
	{302, "代償金額小於或等於零。"},
	{303, "代償筆數小於或等於零。"},
	{304, "申貸期數(月)錯誤。"},
	{305, "代償優惠利率期數加總不等於代償優惠總期數。"},
	{306, "申貸手續費錯誤。"},
	{307, "無法辨識代償手續費收取方式。"},
	{308, "每月代償手續費百分比小於零。"},
	{309, "代償年利率小於零或大於信用卡利率。"},
	{310, "信用卡年利率錯誤。"},
	{311, "代償手續費收取期數(月)錯誤。"},
	{312, "無此申請件資料。"},
	{313, "申請件資料重複。"},
	{314, "無法辨識卡別。"},
	{315, "Unrecognized error code"}
};

Invalid_Msg PRESCREEN_BT_Msg[] = {
	{0,   "無特殊個人風險提示"},
	{101, "三年內有重大信用瑕疵"},
	{102, "信用卡最近一年內曾逾期超過90天"},
	{103, "貸款最近一年內曾逾期超過90天"},
	{104, "現金卡最近一個月遲繳"},
	{105, "現金卡動支比例超過95%"},
	{106, "信用卡及現金卡循環餘額超過50萬"},
	{107, "個人風險過高"},
	{108, "行內黑名單"},
	{109, "信用卡有逾期紀錄"},
	{110, "有強制停卡紀錄"},
	{111, "貸款曾經延遲繳款"}
};

cc_error::cc_error(int error_code, const AnsiString &idn,
             const AnsiString &app_date)
      : _idn(idn), _app_date(app_date)
{
  _error_code = error_code;
};


char * cc_error::ShowMessage()
{
  return PSMsg(_error_code);
}


